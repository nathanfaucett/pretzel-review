const e=location.pathname.split("/").slice(0,-1).join("/"),m=[e+"/internal/immutable/entry/app.abh4cBFA.js",e+"/internal/immutable/nodes/0.DaBqjKU9.js",e+"/internal/immutable/assets/0.Bw-VvHTo.css",e+"/internal/immutable/nodes/1.BQbrwCg6.js",e+"/internal/immutable/nodes/2.DZi64W8E.js",e+"/internal/immutable/nodes/3.Co1fPGOi.js",e+"/internal/immutable/nodes/4.DLQnHOhh.js",e+"/internal/immutable/nodes/5.DHsKRZTb.js",e+"/internal/immutable/nodes/6.BWy6B-f5.js",e+"/internal/immutable/nodes/7.Dfm5zPCE.js",e+"/internal/immutable/nodes/8.CaPlz0ac.js",e+"/internal/immutable/chunks/Icon.BfYXrR8t.js",e+"/internal/immutable/chunks/InputResults.DzkyWnDx.js",e+"/internal/immutable/chunks/auth.Cjow86CX.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.CRpgVj2K.js",e+"/internal/immutable/chunks/i18n-svelte.Cuohsm_x.js",e+"/internal/immutable/chunks/index.CmKZQq8x.js",e+"/internal/immutable/chunks/index.DjE0fdGJ.js",e+"/internal/immutable/chunks/index.bX5v1mw9.js",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/assets/1713067212563-bodensee-0.BbVeZiFZ.webp",e+"/internal/immutable/chunks/localstorageWritable.R--kKzuQ.js",e+"/internal/immutable/chunks/notifications.C5WLTVYY.js",e+"/internal/immutable/chunks/paths.DPJt7D3S.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.C9TP2Msq.js",e+"/internal/immutable/chunks/scheduler.C44hALVJ.js",e+"/internal/immutable/chunks/util.12Ki2goY.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.DPwb74KG.js",e+"/internal/immutable/chunks/index.Cxc5gba7.js"],u=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718364771290",l=self,r=`cache-${o}`,c=[...m,...u];l.addEventListener("install",n=>{async function a(){await(await caches.open(r)).addAll(c)}n.waitUntil(a())});l.addEventListener("activate",n=>{async function a(){for(const t of await caches.keys())t!==r&&await caches.delete(t)}n.waitUntil(a())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const a=(async()=>{const t=new URL(n.request.url),s=await caches.open(r);if(c.includes(t.pathname))return s.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&s.put(n.request,i.clone()),i}catch{return s.match(n.request)}})();n.respondWith(a)}});
