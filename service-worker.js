const e=location.pathname.split("/").slice(0,-1).join("/"),c=[e+"/internal/immutable/entry/app.DppeA6vh.js",e+"/internal/immutable/nodes/0.C7iMgOWD.js",e+"/internal/immutable/assets/0.CZyskL4m.css",e+"/internal/immutable/nodes/1.DhmpRR2J.js",e+"/internal/immutable/nodes/2.1WHJqiT3.js",e+"/internal/immutable/nodes/3.Be4INtsN.js",e+"/internal/immutable/nodes/4.TefoV11w.js",e+"/internal/immutable/nodes/5.DC8IGY6j.js",e+"/internal/immutable/nodes/6.BC-WK3I-.js",e+"/internal/immutable/nodes/7.B1urY0lq.js",e+"/internal/immutable/nodes/8._YM0it7V.js",e+"/internal/immutable/chunks/Icon.dFPfnzcz.js",e+"/internal/immutable/chunks/InputResults.CMxeEwp8.js",e+"/internal/immutable/chunks/auth.VmSBZjLG.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.BDYzryB1.js",e+"/internal/immutable/chunks/i18n-svelte.Dib1W4ot.js",e+"/internal/immutable/chunks/index.D67-Vfk0.js",e+"/internal/immutable/chunks/index.D9hSSsef.js",e+"/internal/immutable/assets/1713067212563-bodensee-0.V9B6jlv2.webp",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/chunks/index.eh8_VlGM.js",e+"/internal/immutable/chunks/localstorageWritable.BawguKoo.js",e+"/internal/immutable/chunks/notifications.B-a4IcwG.js",e+"/internal/immutable/chunks/paths.DGOKCjAW.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.8KdivK0x.js",e+"/internal/immutable/chunks/scheduler.7wqEmfhF.js",e+"/internal/immutable/chunks/util.DvSysGHX.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.p5beTkag.js",e+"/internal/immutable/chunks/index.D0LGCI4N.js"],u=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718459328853",l=self,r=`cache-${o}`,m=[...c,...u];l.addEventListener("install",n=>{async function s(){await(await caches.open(r)).addAll(m)}n.waitUntil(s())});l.addEventListener("activate",n=>{async function s(){for(const t of await caches.keys())t!==r&&await caches.delete(t)}n.waitUntil(s())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const s=(async()=>{const t=new URL(n.request.url),a=await caches.open(r);if(m.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&a.put(n.request,i.clone()),i}catch{return a.match(n.request)}})();n.respondWith(s)}});
