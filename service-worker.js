const e=location.pathname.split("/").slice(0,-1).join("/"),u=[e+"/internal/immutable/entry/app.DnZCzauS.js",e+"/internal/immutable/nodes/0.DRndE5RR.js",e+"/internal/immutable/assets/0.Bk8tqFsi.css",e+"/internal/immutable/nodes/1.5Erjpa3O.js",e+"/internal/immutable/nodes/2.B2K_dlyY.js",e+"/internal/immutable/nodes/3.R1FHApSE.js",e+"/internal/immutable/nodes/4.yuIDPJ5C.js",e+"/internal/immutable/nodes/5.CHrbD7RX.js",e+"/internal/immutable/nodes/6.CYJrlFG9.js",e+"/internal/immutable/nodes/7.BTA1iOPZ.js",e+"/internal/immutable/nodes/8.B32o_04w.js",e+"/internal/immutable/chunks/Icon.BfYXrR8t.js",e+"/internal/immutable/chunks/InputResults.DzkyWnDx.js",e+"/internal/immutable/chunks/auth.Cjow86CX.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.DlN_ClyW.js",e+"/internal/immutable/chunks/i18n-svelte.Cuohsm_x.js",e+"/internal/immutable/chunks/index.CmKZQq8x.js",e+"/internal/immutable/chunks/index.DjE0fdGJ.js",e+"/internal/immutable/chunks/index.bX5v1mw9.js",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/assets/1713067212563-bodensee-0.BbVeZiFZ.webp",e+"/internal/immutable/chunks/localstorageWritable.R--kKzuQ.js",e+"/internal/immutable/chunks/notifications.C5WLTVYY.js",e+"/internal/immutable/chunks/paths.BZqnM4Mm.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.DoMK2Dz7.js",e+"/internal/immutable/chunks/scheduler.C44hALVJ.js",e+"/internal/immutable/chunks/util.12Ki2goY.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.l9XJqhlx.js",e+"/internal/immutable/chunks/index.Cxc5gba7.js"],c=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718363946548",l=self,r=`cache-${o}`,m=[...u,...c];l.addEventListener("install",n=>{async function s(){await(await caches.open(r)).addAll(m)}n.waitUntil(s())});l.addEventListener("activate",n=>{async function s(){for(const t of await caches.keys())t!==r&&await caches.delete(t)}n.waitUntil(s())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const s=(async()=>{const t=new URL(n.request.url),a=await caches.open(r);if(m.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&a.put(n.request,i.clone()),i}catch{return a.match(n.request)}})();n.respondWith(s)}});
