const e=location.pathname.split("/").slice(0,-1).join("/"),c=[e+"/internal/immutable/entry/app.BS3FnP-l.js",e+"/internal/immutable/nodes/0.BJZRjabm.js",e+"/internal/immutable/assets/0.Bw-VvHTo.css",e+"/internal/immutable/nodes/1.D_-kipcd.js",e+"/internal/immutable/nodes/2.Dw7QkNWw.js",e+"/internal/immutable/nodes/3.B1GuWP-F.js",e+"/internal/immutable/nodes/4.Xpk1icK2.js",e+"/internal/immutable/nodes/5.BzbIk3aE.js",e+"/internal/immutable/nodes/6.CYgT7FA4.js",e+"/internal/immutable/nodes/7.BLlXTNyg.js",e+"/internal/immutable/nodes/8.CMdC-nST.js",e+"/internal/immutable/chunks/Icon.CAQxXdXb.js",e+"/internal/immutable/chunks/InputResults.XoygKwSf.js",e+"/internal/immutable/chunks/auth.VmSBZjLG.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.hEQ69C-m.js",e+"/internal/immutable/chunks/i18n-svelte.Dib1W4ot.js",e+"/internal/immutable/chunks/index.D67-Vfk0.js",e+"/internal/immutable/chunks/index.DfaIzEbI.js",e+"/internal/immutable/assets/1713067212563-bodensee-0.DPn6Idni.webp",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/chunks/index.eh8_VlGM.js",e+"/internal/immutable/chunks/localstorageWritable.BawguKoo.js",e+"/internal/immutable/chunks/notifications.DxsgmpiX.js",e+"/internal/immutable/chunks/paths.Dqveb_ZK.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.LdgfeyQS.js",e+"/internal/immutable/chunks/scheduler.7wqEmfhF.js",e+"/internal/immutable/chunks/util._RhyUapw.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.CbTW4gez.js",e+"/internal/immutable/chunks/index.D0LGCI4N.js"],u=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718457675734",l=self,m=`cache-${o}`,r=[...c,...u];l.addEventListener("install",n=>{async function a(){await(await caches.open(m)).addAll(r)}n.waitUntil(a())});l.addEventListener("activate",n=>{async function a(){for(const t of await caches.keys())t!==m&&await caches.delete(t)}n.waitUntil(a())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const a=(async()=>{const t=new URL(n.request.url),s=await caches.open(m);if(r.includes(t.pathname))return s.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&s.put(n.request,i.clone()),i}catch{return s.match(n.request)}})();n.respondWith(a)}});
