const e=location.pathname.split("/").slice(0,-1).join("/"),r=[e+"/internal/immutable/entry/app.Cluw5jLC.js",e+"/internal/immutable/nodes/0.DdRjNOJ_.js",e+"/internal/immutable/assets/0.C9Io0NLL.css",e+"/internal/immutable/nodes/1.4DIv60bT.js",e+"/internal/immutable/nodes/2.rltGhbq3.js",e+"/internal/immutable/nodes/3.D6o3QMHw.js",e+"/internal/immutable/nodes/4.CuKQa3hz.js",e+"/internal/immutable/nodes/5.CnYXdJlo.js",e+"/internal/immutable/nodes/6.DdKjF7tQ.js",e+"/internal/immutable/nodes/7.B4tAJFYT.js",e+"/internal/immutable/nodes/8.BZ-C_KG2.js",e+"/internal/immutable/chunks/InputResults.JsPd7LL3.js",e+"/internal/immutable/chunks/auth.BLD35ye6.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/each.Bs1uTvQV.js",e+"/internal/immutable/chunks/entry.COfQ9aoI.js",e+"/internal/immutable/chunks/i18n-svelte.CwmAXuKX.js",e+"/internal/immutable/chunks/index.B6yVox2M.js",e+"/internal/immutable/chunks/index.CDi8wPEY.js",e+"/internal/immutable/assets/1718058170368-brew-dog-0.XPthv23E.webp",e+"/internal/immutable/chunks/index.De_1-CT6.js",e+"/internal/immutable/chunks/index.FWmrwH0f.js",e+"/internal/immutable/chunks/localstorageWritable.ZYdZUze1.js",e+"/internal/immutable/chunks/notifications.C--YttEn.js",e+"/internal/immutable/chunks/paths.BVtBK2WM.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/chunks/scheduler.BYo21klU.js",e+"/internal/immutable/chunks/util.DmzQDt7J.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.B9gY7Nv-.js",e+"/internal/immutable/chunks/index.CrSXfiSJ.js"],m=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json",e+"/robots.txt"],o="1718188623923",l=self,u=`cache-${o}`,c=[...r,...m];l.addEventListener("install",n=>{async function s(){await(await caches.open(u)).addAll(c)}n.waitUntil(s())});l.addEventListener("activate",n=>{async function s(){for(const t of await caches.keys())t!==u&&await caches.delete(t)}n.waitUntil(s())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const s=(async()=>{const t=new URL(n.request.url),a=await caches.open(u);if(c.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&a.put(n.request,i.clone()),i}catch{return a.match(n.request)}})();n.respondWith(s)}});
