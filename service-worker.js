const e=location.pathname.split("/").slice(0,-1).join("/"),c=[e+"/internal/immutable/entry/app.DOATNiPC.js",e+"/internal/immutable/nodes/0.uCLMBuTl.js",e+"/internal/immutable/assets/0.Bw-VvHTo.css",e+"/internal/immutable/nodes/1.BkfX8PjV.js",e+"/internal/immutable/nodes/2.DRjm4TA5.js",e+"/internal/immutable/nodes/3.Dj2lynbQ.js",e+"/internal/immutable/nodes/4.cVsvToU-.js",e+"/internal/immutable/nodes/5.3kBAgqhu.js",e+"/internal/immutable/nodes/6.BB0ch0mR.js",e+"/internal/immutable/nodes/7.qkfQaTqn.js",e+"/internal/immutable/nodes/8.BjPfDVp6.js",e+"/internal/immutable/chunks/Icon.D2W0Yhtu.js",e+"/internal/immutable/chunks/InputResults.BGDXJ2ZP.js",e+"/internal/immutable/chunks/auth.VmSBZjLG.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.Q7kwMYOh.js",e+"/internal/immutable/chunks/i18n-svelte.Dib1W4ot.js",e+"/internal/immutable/chunks/index.D67-Vfk0.js",e+"/internal/immutable/chunks/index.bX5v1mw9.js",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/assets/1713067212563-bodensee-0.BbVeZiFZ.webp",e+"/internal/immutable/chunks/index.eh8_VlGM.js",e+"/internal/immutable/chunks/localstorageWritable.BawguKoo.js",e+"/internal/immutable/chunks/notifications.CQVzKjhH.js",e+"/internal/immutable/chunks/paths.DyuS7glG.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.BXkWeAMH.js",e+"/internal/immutable/chunks/scheduler.7wqEmfhF.js",e+"/internal/immutable/chunks/util.zz7eDuoR.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.B-_4yaWB.js",e+"/internal/immutable/chunks/index.Cxc5gba7.js"],r=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718365235782",l=self,u=`cache-${o}`,m=[...c,...r];l.addEventListener("install",n=>{async function a(){await(await caches.open(u)).addAll(m)}n.waitUntil(a())});l.addEventListener("activate",n=>{async function a(){for(const t of await caches.keys())t!==u&&await caches.delete(t)}n.waitUntil(a())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const a=(async()=>{const t=new URL(n.request.url),s=await caches.open(u);if(m.includes(t.pathname))return s.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&s.put(n.request,i.clone()),i}catch{return s.match(n.request)}})();n.respondWith(a)}});
