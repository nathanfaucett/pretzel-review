const e=location.pathname.split("/").slice(0,-1).join("/"),u=[e+"/internal/immutable/entry/app.DcByoDxK.js",e+"/internal/immutable/nodes/0.G11pgXDv.js",e+"/internal/immutable/assets/0.P4SPYThT.css",e+"/internal/immutable/nodes/1.DoO2wA63.js",e+"/internal/immutable/nodes/2.7I7kl5NT.js",e+"/internal/immutable/nodes/3.lasbRWFJ.js",e+"/internal/immutable/nodes/4.KOkCUwGl.js",e+"/internal/immutable/nodes/5.hjVcEj9G.js",e+"/internal/immutable/nodes/6._1XAjWVN.js",e+"/internal/immutable/nodes/7.C00Zugzs.js",e+"/internal/immutable/nodes/8.DlSH7ZKv.js",e+"/internal/immutable/chunks/Icon.Cg4N3CUI.js",e+"/internal/immutable/chunks/InputResults.0iyH25Eh.js",e+"/internal/immutable/chunks/auth.Cuil8WDr.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.eSNWjyAu.js",e+"/internal/immutable/chunks/i18n-svelte.Cy_NFzKh.js",e+"/internal/immutable/chunks/index.D-P55wtx.js",e+"/internal/immutable/assets/1721417998627-mellow-mushroom-decatur-0.BvCXjyto.webp",e+"/internal/immutable/assets/1721251723092-the-lost-druid-brewery--distillery-0.C3OjEnM3.webp",e+"/internal/immutable/assets/1721251536575-brick-store-pub-0.CeUNgfok.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/assets/1719697913116-twains-brewpub--billiards-0.Btbmb_cV.webp",e+"/internal/immutable/assets/1718574622702-jekyl-and-hyde-taphouse-0.7ODWYZ55.webp",e+"/internal/immutable/assets/1719270711525-the-springs-cinema--taphouse-0.DfN4abXX.webp",e+"/internal/immutable/assets/1719018191808-meltons-app-and-tap-0.tWosB_L0.webp",e+"/internal/immutable/assets/1713067212563-bodensee-0.V9B6jlv2.webp",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.aINK3Ir2.webp",e+"/internal/immutable/chunks/index.DLwqVcQA.js",e+"/internal/immutable/chunks/index.GdwTKEnR.js",e+"/internal/immutable/chunks/localstorageWritable.BBtfYKNF.js",e+"/internal/immutable/chunks/notifications.CHwUNRbm.js",e+"/internal/immutable/chunks/paths.BfGovDbC.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.Du6D0cT2.js",e+"/internal/immutable/chunks/scheduler.BZy1TXPY.js",e+"/internal/immutable/chunks/stores.C2ZV5Aow.js",e+"/internal/immutable/chunks/util.COdJP13i.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.tEQZ9sPX.js",e+"/internal/immutable/chunks/index.DmZJW9rw.js"],c=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1721738539323",l=self,r=`cache-${o}`,m=[...u,...c];l.addEventListener("install",t=>{async function s(){await(await caches.open(r)).addAll(m)}t.waitUntil(s())});l.addEventListener("activate",t=>{async function s(){for(const n of await caches.keys())n!==r&&await caches.delete(n)}t.waitUntil(s())});l.addEventListener("fetch",t=>{if(t.request.method==="GET"){const s=(async()=>{const n=new URL(t.request.url),a=await caches.open(r);if(m.includes(n.pathname))return a.match(n.pathname);try{const i=await fetch(t.request);return i.status===200&&!t.request.url.startsWith("chrome-extension://")&&a.put(t.request,i.clone()),i}catch{return a.match(t.request)}})();t.respondWith(s)}});
