const e=location.pathname.split("/").slice(0,-1).join("/"),m=[e+"/internal/immutable/entry/app.Bh7sNqUH.js",e+"/internal/immutable/nodes/0.CIzI0OE3.js",e+"/internal/immutable/assets/0.Bw-VvHTo.css",e+"/internal/immutable/nodes/1.V-np8N52.js",e+"/internal/immutable/nodes/2.BMMEpdOI.js",e+"/internal/immutable/nodes/3.CS9Az5qi.js",e+"/internal/immutable/nodes/4.DSZUEvEX.js",e+"/internal/immutable/nodes/5.D2h91LaV.js",e+"/internal/immutable/nodes/6.aOBjgdQV.js",e+"/internal/immutable/nodes/7.DiwF99HV.js",e+"/internal/immutable/nodes/8.bhi0AlV8.js",e+"/internal/immutable/chunks/Icon.D2W0Yhtu.js",e+"/internal/immutable/chunks/InputResults.BGDXJ2ZP.js",e+"/internal/immutable/chunks/auth.VmSBZjLG.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/entry.EqC2SNpH.js",e+"/internal/immutable/chunks/i18n-svelte.Dib1W4ot.js",e+"/internal/immutable/chunks/index.CONSuTQ-.js",e+"/internal/immutable/assets/1717646487699-benchwarmers-0.D_5DKXrL.webp",e+"/internal/immutable/assets/1716782422460-crystal-beer-parlor-0.CtTRpkSK.webp",e+"/internal/immutable/assets/1713067212563-bodensee-0.BbVeZiFZ.webp",e+"/internal/immutable/chunks/index.D67-Vfk0.js",e+"/internal/immutable/chunks/index.eh8_VlGM.js",e+"/internal/immutable/chunks/localstorageWritable.BawguKoo.js",e+"/internal/immutable/chunks/notifications.CQVzKjhH.js",e+"/internal/immutable/chunks/paths.CEEq1bgd.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/assets/repo.9zABvnW_.css",e+"/internal/immutable/chunks/repo.BpBKFuSy.js",e+"/internal/immutable/chunks/scheduler.7wqEmfhF.js",e+"/internal/immutable/chunks/util.zz7eDuoR.js",e+"/internal/immutable/chunks/index.DbiDv6BT.js",e+"/internal/immutable/entry/start.BgtTahQT.js",e+"/internal/immutable/chunks/index.D0LGCI4N.js"],c=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json"],o="1718366451032",l=self,r=`cache-${o}`,u=[...m,...c];l.addEventListener("install",n=>{async function a(){await(await caches.open(r)).addAll(u)}n.waitUntil(a())});l.addEventListener("activate",n=>{async function a(){for(const t of await caches.keys())t!==r&&await caches.delete(t)}n.waitUntil(a())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const a=(async()=>{const t=new URL(n.request.url),s=await caches.open(r);if(u.includes(t.pathname))return s.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&s.put(n.request,i.clone()),i}catch{return s.match(n.request)}})();n.respondWith(a)}});
